{
	"scopeName": "source.bay",
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bay Lang",
	"patterns": [
		{ "include": "#comment_block" },
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#style_block" },
		{ "include": "#template_block" }
	],
	"repository": {
		"comment_block": {
			"name": "comment.block.bay",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"style_block": {
			"begin": "<style[^>]*>",
			"end": "</style>",
			"name": "source.css",
			"patterns": [
				{
					"include": "source.css"
				}
			]
		},
		"template_block": {
			"begin": "<template[^>]*>",
			"end": "</template>",
			"name": "text.xml",
			"patterns": [
				{
					"include": "text.xml"
				}
			]
		},
		"keywords": {
			"name": "keyword.other.bay",
			"match": "\\b(abstract|and|as|assignable|async|attr|await|bool|catch|class|classof|classref|clone|cloneable|const|continue|curry|declare|default|double|else|extends|false|float|fn|for|fun|html|if|implements|implementsof|instanceof|int|interface|lambda|list|macros|memorize|method|monad|namespace|new|not|nullable|of|or|pipe|primitive|protected|public|published|pure|return|safe|script|serializable|static|string|struct|style|template|throw|true|try|type|use|var|void|while)\\b"
		},
		"strings": {
			"name": "string.quoted.double.bay",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bay",
					"match": "\\\\."
				}
			]
		}
	}
}